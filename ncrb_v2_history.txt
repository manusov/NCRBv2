12.11.2022. v2.04.07. Changes for x64 and ia32 versions.
1) Data from screens "Vector brief" and "Memory run" added to text report.
2) Added signatures for detection ACPI tables:
   APMT, 'Arm Performance Monitoring Unit'
   CCEL, 'Confidential Computing Event Log'
   CDAT, 'Coherent Device Attribute'
   DTPR, 'DMA TXT Protected Range'
   IERS, 'Inline Encryption Reporting Structure'
   KEYP, 'Key Programming Interface for Integrity'
   MHSP, 'Microsoft Pluton Security Processor'
   NBFT, 'NVMe-over-Fabric Boot Firmware'
   SWFT, 'Sound Wire File'
   Data source:
   Advanced Configuration and Power Interface (ACPI) Specification.
   Release 6.5.
   UEFI Forum, Inc.
   August 29, 2022.
   https://uefi.org/specifications
   https://uefi.org/sites/default/files/resources/ACPI_Spec_6_5_Aug29.pdf


13.09.2022. v2.04.06. Changes for x64 and ia32 versions.
Fixed bug with extra empty lines in the text report.


11.09.2022. v2.04.05. Changes for x64 and ia32 versions.
1) Added system information data to text report saved as file.
2) Internal minor changes.


29.08.2022. v2.04.04. Changes for x64 and ia32 versions.
1) Internal minor changes.
2) Improved comments.


24.08.2022. v2.04.03. Changes for x64 and ia32 versions.
Experimental support for Intel hybrid CPUs.


08.07.2022. v2.03.02. Changes for x64 and ia32 versions.
1) Optimized dialogues callback routines.
2) Improved error reporting details after parsing INF file.
3) Added undocumented kernel mode driver load option.


29.06.2022. v2.03.01. Changes for ia32 version.
Fixed bug with differrentiate erros for runtime errors reporting.
Corrected messages about memory allocation errors and timings measurement errors.


26.06.2022. v2.03.00. Changes for x64 and ia32 versions.
Support INF files for override Y-scale (under verification).


11.06.2022. v2.02.06. Changes for x64 and ia32 versions.
1) Added save and restore windows coordinates for Memory Draw and Memory Run child windows.
2) Corrected comments for ia32 version sources, use 32-bit registers names.


12.04.2022. v2.02.05. Changes for x64 and ia32 versions.
Fixed bug with X coordinates (+/-1).


11.04.2022. v2.02.04. Changes for x64 and ia32 versions.
Redesigned algorithm for drawings Performance = F( Block Size ).
Supported Y-axis auto-scale for drawings Performance = F( Block Size ).
Added option for silent draw without realtime show.


30.03.2022. v2.01.03. Changes for x64 and ia32 versions.
Added "Please wait" window for measurement operations.


28.03.2022. v2.01.02. Changes for x64 and ia32 versions.
Changed "About" window procedure (Status after WM_PAINT message handling).


27.03.2022. v2.01.01. Changes for x64 and ia32 versions.
1) New design for "About" window with web links to GitHub and FASM.
2) Added signatures for detection ACPI tables:
   2.1) AGDI, 'Arm Generic Diagnostic Dump Interface'
        https://www.spinics.net/lists/kernel/msg4274275.html
   2.2) HMAT, 'Heterogeneous Memory Attributes'
   2.3) PDTT, 'Platform Debug Trigger'
   2.4) PPTT, 'Processor Properties Topology'
   2.5) S3PT, 'S3 Performance'
        https://uefi.org/specs/ACPI/6.4/05_ACPI_Software_Programming_Model/ACPI_Software_Programming_Model.html
   2.6) TDEL, 'Trust Domain Event Log'
        https://uefi.org/sites/default/files/resources/Virtual%20Firmware%20for%20Intel%20Trust%20Domain%20Extensions%20-%20UEFI_12.15.2020_0.pdf
   2.7) VIOT, 'Virtual I/O Translation'
         https://lore.kernel.org/linux-acpi/YFSIKeihQAc8KPmG@myrica/T/
   2.8) WDDT, 'Watch Dog Description'
        https://code.woboq.org/linux/linux/include/acpi/actbl3.h.html
See also:
https://www.acpica.org/
https://github.com/acpica/acpica/
https://github.com/acpica/acpica/blob/master/source/common/ahtable.c
https://uefi.org/specs/ACPI/6.4/05_ACPI_Software_Programming_Model/ACPI_Software_Programming_Model.html


28.01.2022. v2.01.00. Changes for x64 and ia32 versions.
1) Added new sheet for view SMBIOS information.
2) Added ACPI table signature to data base.
   ASF!, Alert Standard Format.
   Data source: Distributed Management Task Force (DMTF).
   https://www.dmtf.org/sites/default/files/standards/documents/DSP0136.pdf
3) Added results for tested platforms.


13.01.2022. v2.00.18. Changes for x64 and ia32 versions.
1) Unlocked benchmark modes: Gather read AVX512, Scatter write AVX512.
2) Added ACPI tables signatures to data base.
   2.1) OEMB, OEM-specific table.
        https://uefi.org/specs/ACPI/6.4/21_ACPI_Data_Tables_and_Table_Def_Language/ACPI_Data_Tables.html 
        https://github.com/Azure/WALinuxAgent/issues/1946
   2.2) GSCI, GMCH SCI table
        http://web.mit.edu/custer/Desktop/custer/MacData/afs/sipb/project/freebsd/head/sys/contrib/dev/acpica/include/actbl2.h
        https://github.com/intel/linux-intel-lts/blob/master/include/acpi/actbl1.h
   2.3) FIDT, Firmware ID Table
        https://patents.justia.com/patent/10891139
        https://patents.justia.com/inventor/oleksiy-yakovlev
   2.4) NHLT, Non-HD Audio Endpoint Description Table
        https://01.org/sites/default/files/595976_intel_sst_nhlt.pdf
        https://review.coreboot.org/c/coreboot/+/12935/
        Intel Smart Sound Technology NHLT Specification
        Architecture Guide/Overview. January 2020. Revision 0.8.1
   2.5) DBG2, Debug Port Table 2
        https://docs.microsoft.com/en-us/windows-hardware/drivers/bringup/acpi-debug-port-table
        https://docs.microsoft.com/en-us/windows-hardware/drivers/bringup/acpi-debug-port-table?redirectedfrom=MSDN
   2.6) PTDT, Platform Telemetry Data Table
        https://twitter.com/NikolajSchlej/status/1411469135574278145
3) Report file size limit changed.
4) Added results for ASUS TUF Gaming Z590-Plus WiFi.


12.12.2021. v2.00.17. Changes for x64 and ia32 versions.
Bug fixed at drawings window. Separated "Custom block size" and "Custom block" strings
(extra size strings cause wrong pixels).


11.12.2021. v2.00.16. Changes for x64 and ia32 versions.
1)  Custom block size mode maked more useable. 
    Changed constants for timings adaptive measurements.
2)  Added check for custom block size edit.
    Must be correct hexadecimal chars and value check for minimum, maximum, alignment.
3)  Bug fixed in the support topological WinAPI procedure.
    Caused topological errors at Win7 32-bit for some platforms.
Code changes details.
1)  LATENCY_DIVISOR = 50, defined as symbolic constant, 
    DEFAULT_CACHE_BLOCK = 32 * 1024, defined as symbolic constant, 
    both for ia32 and x64 versions, threads_manager\sessionstart.inc.
2)  CUSTOM_BLOCK_MAX = 64 * 1024 * 1024, change to 256 * 1024 * 1024, for ia32 version,
    threads_manager\connect_data.inc.
3)  CUSTOM_BLOCK_MAX = 64 * 1024 * 1024, change to 1024 * 1024 * 1024, for x64 version,
    threads_manager\connect_data.inc.
4)  CUSTOM_BLOCK_ALIGN = 16 * 1024 , change to 512, both for ia32 and x64 versions,
    threads_manager\connect_data.inc.
5)  CUSTOM_REPEATS_FAST = 100000 , change to 100, both for ia32 and x64 versions,
    threads_manager\connect_data.inc.
6)  CUSTOM_REPEATS_SLOW = 1000000, not changed, threads_manager\connect_data.inc.
7)  Restrictions for custom block size, maked subroutine CustomBlockRestrictions,
    include return status accepted/corrected , both for ia32 and x64 versions,
    threads_manager\sessionstart.inc, ncrb32.asm, ncrb64.asm.
8)  Warning message if wrong hexadecimal input for custom block,
    both for ia32 and x64 versions, subroutine Binder at ncrb32.asm, ncrb64.asm.
9)  Warning message if min/max/alignment restrictions for custom block size,
    both for ia32 and x64 versions, labels .memoryRun, .memoryDraw at
    dialogs\dialog_main_tabs.inc.
10) Bug if small block (below 4KB) for SSE/AVX/AVX512.
    Fixed by select checks for user-defined block only.
11) Bug in the 32-bit version if custom block size above 4GB, bits A[63-32] is not
    checked, but editable. Fixed by check high dword.
12) Bug fixed with L4 cache checkbox logic (but yet not verified at platforms with L4).
13) Bug with string size limit, for decimal and hex, for differrent sizes.
    Yet for one size (16 chars) because yet used only hex 64-bit edit fields.
    Fixed by write termination byte 00h.
14) Bug with empty string input. Fixed by check string length returned by WinAPI.
15) Set defaults must correct all input errors. Verified.
16) If extended topological API returns no data without error, maked return silently,
    without error signaling, both for ia32 and x64 versions,
    subroutine HelperTopologyEx, system_info\info_extended_topology.inc.
    Yet change for extended topology method only.
    Fixed bug occurred at Win7 32-bit at some platforms.
Verification details:     
1)  Re-test Windows XP/7/10 both for ia32 and x64.
    XP-32, XP-64, 7-32, 7-64, 10-32, 10-64.
2)  Experiments with custom block size, min, max and alignment values.
    Use big blocks, 512-1024 MB at x64 mode. 
3)  Platform with 8KB L1 data cache. Differentiate limits. Re-test ASUS P4T.
    Use big blocks, 128-256 MB at ia32 mode.
4)  Re-test Large Pages.


07.12.2021. v2.00.15. Changes for x64 and ia32 versions.
Updated constants for L1 timings measurement:
L1_REPEATS_FAST : old value = 100000  , new value = 2000000
L1_REPEATS_SLOW : old value = 2000000 , new value = 2500000.


07.12.2021. v2.00.14. Changes for x64 and ia32 versions.
Updated save report dialogue.


05.12.2021. v2.00.13. Changes for x64 and ia32 versions.
Fixed bug with report file default extension (txt).


05.12.2021. v2.00.12. Changes for x64 and ia32 versions.
1) Partially supported report save from main menu.
2) Fixed wrong declaration TEMP_BUFFER size, Units "DQ" corrected to "DB".


02.12.2021. v2.00.11. Changes for x64 and ia32 versions.
1) Supported gathered read for AVX256.
2) Supported gathered read and scattered write for AVX512, but under verification, YET LOCKED.
3) Supported non-temporal write by AMD CLZERO instruction, but under verification, YET LOCKED.
4) Supported CPUID-based topology scan for Intel and AMD. Actual for old versions of Windows XP,
   if cannot detect platform topology by WinAPI.
5) Bug fixed with SSE3 detection, system information screen.


23.11.2021. Engineering release v2.00.10.
Fixed bugs with NUMA support.


19.11.2021. Engineering release v2.00.09.
1) Fixed bug with extract parameters from ACPI table SRAT (System/Static Resource Affinity Table).
2) Add results Amazon-virtual-AMD-EPYC-7R32.


18.11.2021. Engineering release v2.00.08.
1) Differentiation "ia32" or "ia32 under Win64" for results window after "Run" button (for 32-bit version).
2) Cache info visualized as "size x count" if count>1 or "size" if count=1 (for system info screen).
3) Add CPUID subfunction number validation for function 7, actual for detect AVX512 features.
4) Fixed "Nontemporal" checkbox wrong active if CPU don't support SSE.


14.11.2021. 
Create this repository.
Commit engineering release v2.00.07.

